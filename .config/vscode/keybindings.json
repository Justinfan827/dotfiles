// Place your key bindings in this file to override the defaults
[
  // Coding operations

  {
    "command": "composerMode.agent",
    "key": "cmd+i"
  },
  // {
  //   "command": "openInGitHub.openFile",
  //   "key": "space g b",
  //   "when": "vim.mode == 'Normal' && editorTextFocus"
  // },
  {
    "command": "editor.action.showHover",
    "key": "shift+k",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  {
    "command": "workbench.action.navigateLeft",
    "key": "ctrl-h"
  },
  {
    "command": "workbench.action.navigateRight",
    "key": "ctrl-l"
  },
  {
    "command": "workbench.action.navigateDown",
    "key": "ctrl-j"
  },
  {
    "command": "workbench.action.navigateUp",
    "key": "ctrl-k"
  },
  {
    "command": "workbench.action.showAllEditors",
    "key": "space",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.terminal.toggleTerminal",
    "key": "space f f",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.splitEditorRight",
    "key": "space s v",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl-n",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  // {
  //   "command": "workbench.action.nextEditorInGroup",
  //   "key": "tab",
  //   "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  // },
  // {
  //   "command": "workbench.action.previousEditorInGroup",
  //   "key": "shift-tab",
  //   "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  // },
  {
    "command": "editor.action.codeAction",
    "key": "space c a",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  {
    "command": "editor.action.rename",
    "key": "space r n",
    "when": "editorTextFocus && vim.mode == 'Normal'"
  },
  {
    "command": "workbench.action.gotoSymbol",
    "key": "space c s",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "space b d",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  {
    "command": "workbench.action.closeOtherEditors",
    "key": "space b o",
    "when": "(vim.mode == 'Normal' && editorTextFocus) || !inputFocus"
  },
  {
    "command": "workbench.action.quickOpen",
    "key": "space space",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "editor.action.revealDefinition",
    "key": "space g d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToReferences",
    "key": "space g r",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToTypeDefinition",
    "key": "space g t",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.goToImplementation",
    "key": "space g i",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.findInFiles",
    "key": "space s f",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "args": {
      "commands": ["workbench.view.scm", "workbench.scm.focus"]
    },
    "command": "runCommands",
    "key": "space g g",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  // File operations
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "c",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.paste",
    "key": "p",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.cut",
    "key": "x",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openToSide",
    "key": "s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    },
    "command": "runCommands",
    "key": "shift-s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openAndPassFocus",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "list.toggleExpand",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  }
]
