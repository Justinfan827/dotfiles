# Smart pane switching with awareness of Vim splits.
#
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Allow you to do <bind key> / to search from bottom up
bind-key / copy-mode \; send-key ?
# Capture everything in the buffer and write to file
# Now, <bind-key> P will capture everything
bind-key P 'capture-pane' \; capture-pane -S - \; save-buffer /tmp/tmux \; delete-buffer
# Take it even further and open log in vim
bind-key v 'capture-pane' \; capture-pane -S - \; save-buffer /tmp/tmux \; delete-buffer \; send-keys Escape 'vim "+normal G" +"?^> " /tmp/tmux' Enter

# Now you can quickly open the tmux config in tmux pane using <prefix> followed by shift + M,
# edit your configuration, and save when you done. To reload the tmux configuration use <prefix> followed by r.
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
bind-key M split-window -h "vim ~/.tmux.conf"

# Better vim like copy and pasying. preix + P wiill paste
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# make page up and down control K and j to avoid Ctrl-D and quitting stuff
bind-key -T copy-mode-vi C-k send-keys -X halfpage-up
bind-key -T copy-mode-vi C-j send-keys -X halfpage-down



# set default shell to fish
set -g default-shell /usr/local/bin/fish
#set-option -g default-shell /usr/local/bin/zsh
# first index for pane is 1
set -g pane-base-index 1

# Binding ctrl K to clear history of panel like cmd k in iterm
bind -n C-q  send-keys -R \; send-keys C-l \; clear-history

# vim like scrolling
set-window-option -g mode-keys vi

# Allow scrolling in tmux window
set -g mouse on

# auto read buffer in vim (note: having vim lag due to this)
#set -g focus-events on


# make scrollback better
set-option -g history-limit 50000


# set the bind key to Ctrl-a
set -g prefix ^a

# open new pane in current dir
#bind c new-window -c "#{pane_current_path}"
#bind '"' split-window -c "#{pane_current_path}"
#bind % split-window -h -c "#{pane_current_path}"
#
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

#coc suggested settings
set-option -sg escape-time 5

# suggested terminal color settiings
#set -g default-terminal "screen-256color"
# tell Tmux that outside terminal supports true color
#set -ga terminal-overrides ",xterm-256color*:Tc"
# italics https://medium.com/@dubistkomisch/how-to-actually-get-italics-and-true-colour-to-work-in-iterm-tmux-vim-9ebe55ebc2be
#set -g default-terminal 'tmux-256color'
#set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
#https://gist.github.com/andersevenrud/015e61af2fd264371032763d4ed965b6
#set -g default-terminal "tmux-256color"
#set -ag terminal-overrides ",xterm-256color:RGB"
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",screen-256color:Tc"

# fix ssh agent when tmux is detached
#set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock


######################
### DESIGN CHANGES ###
######################

# 0 is too far from ` ;)
set -g base-index 1

# rename to current path
#setw -g automatic-rename-format "#{b:pane_current_path}"
# current working directory
set -g status-right "#(echo #{pane_current_path} | sed 's#$HOME#~#g')
